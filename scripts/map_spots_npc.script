--
-- Подсвет НПС на карте
-- Автор: naxac
-- Настроил под свой мод: Dancher
--

local update_time_delta = 1000
local elapsed_time = 0
local added_spots = {}
local detection_distance = 50

function update()
	local time = time_global()
	if time > elapsed_time then
		elapsed_time = time + update_time_delta
		for id,val in pairs(db.storage) do
			local obj = level.object_by_id(id)
			if 
				obj and 
				(IsStalker(obj) or obj:section() == "m_trader") and
				id~=0 
			then
				show_spots(obj, id)
			end
		end
	end
end

function show_spots(npc, id)
	local actor = db.actor
	local npc_relation = npc:relation(actor)
	local spot_relation_type = nil

	if npc_relation == game_object.neutral then
		spot_relation_type = "neutral"
	elseif npc_relation == game_object.friend then
		spot_relation_type = "friend"
	else
		spot_relation_type = "enemy"
	end
	
	if spot_relation_type == nil then
		return
	end
	
	local spot = "naxac_"..spot_relation_type.."_location"

	if
		is_npc_detected(npc) and
		is_npc_alive(npc)
	then
		if added_spots[id] ~= nil then
			if spot ~= added_spots[id] then
				remove_spot(id)
			else
				return
			end
		end
	
		if
			spot_relation_type == "enemy" and 
			not pda_upgrade_manager.has_upgrade(2)
		then
			return
		end
		
		-- DMX Mod
		dmx_mod.add_mapspot(id)
	
		local hint = game.translate_string(npc:character_community())
		add_spot(id, spot, hint)
	else
		if added_spots[id] == nil then
			return
		end
		
		remove_spot(id)
	end
end

function add_spot(id, spot, hint)
	level.map_add_object_spot(id, spot, hint)
	added_spots[id] = spot
end

function remove_spot(id)
	-- DMX Mod
	dmx_mod.remove_mapspot(id)
		
	local spot = added_spots[id]
	level.map_remove_object_spot(id, spot)
	
	added_spots[id] = nil
end

function is_npc_detected(npc)
	return db.actor:position():distance_to(npc:position()) <= detection_distance
end

function is_npc_alive(npc)
	return npc.health > 0
end

function is_already_on_map(sid, spot_name)
    local obj = alife():story_object(sid)
    return obj and level.map_has_object_spot(obj.id, spot_name)
end