-- Стоимость
joining_cost = 20000

-- Звуки нотификации
pda_tips = xr_sound.get_safe_sound_object([[device\pda\pda_tip]])

-- Массив с id'шками групировок
communities = 
{
	'actor', -- Оказывается, у ГГ групировока не одиночки, а actor... Оригинальная - stalker
	'bandit',
	'military', 
	'killer', 
	'actor_dolg', -- Группировка Свобода именно актора. Оригинальная - dolg
	'actor_freedom', -- Группировка Долг именно актора. Оригинальная - freedom
	'ecolog', 
	'monolith',
	'dolg',		-- Оригинальная групировока Долга
	'freedom',	-- Оригинальная групировока Свободы
	'stalker'	-- Оригинальная групировока Одиночек
}

function join_lonely (actor, npc)
	set_actor_community(communities[1], false)
end

function join_bandit (actor, npc)
	set_actor_community(communities[2], false)
end

function join_army (actor, npc)
	set_actor_community(communities[3], false)
end

function join_killer (actor, npc)
	set_actor_community(communities[4], false)
end

function join_duty (actor, npc)
	set_actor_community(communities[5], false)
end

function join_freedom (actor, npc)
	set_actor_community(communities[6], false)
end

function join_ecolog (actor, npc)
	set_actor_community(communities[7], true)
end

function join_monolith (actor, npc)
	set_actor_community(communities[8], false)
end

function pay(actor)
	actor:give_money(joining_cost * -1)
	game_stats.money_quest_update(joining_cost * -1)
	dialogs.relocate_money(actor, joining_cost, "out")
end

function check_player_money(actor, npc)
	if actor:money() >= joining_cost then
		return true
	end
	
	return false
end

--
-- Community checks
--

function check_player_is_not_lonely(actor, npc)	
	return actor:character_community() ~= communities[1]
end

function check_player_community(actor, npc)
	local npc_community = npc:character_community()
	
	if npc_community == communities[9] then
		npc_community = communities[5]
	elseif npc_community == communities[10] then
		npc_community = communities[6]
	end

	if actor:character_community() == npc_community then
		return false
	end
	
	return true
end

function check_player_is_in_community(actor, npc)	
	return not check_player_community(actor, npc)
end

function set_actor_community(community_id, cost_free)	
	local actor = db.actor
	
	if actor:character_community() == community_id then
		show_failed_message()
	else
		
		if cost_free == false then
			pay(actor)
		end
	
		actor:set_character_community (community_id, 0, 0)
		change_actor_reputation(community_id)
		show_success_message(community_id)
	end
end

function change_actor_reputation(community_id)
	local actor = db.actor

	if 
		community_id == communities[2] or
		community_id == communities[4] or
		community_id == communities[8]
	then
		if actor:character_reputation() > 0 then
			actor:change_character_reputation(db.actor:character_reputation() * -1)
		end
	end

end

function show_failed_message()
	local title = "%c[255,160,160,160]Сообщение"
	local service_text = "\\n%c[default]Вы уже состоите в данной группировке."
	local news_text = title..service_text
	local task_texture, task_rect = get_texture_info("ui_iconsTotal_grouping")
	
	pda_tips:play(db.actor, 0, sound_object.s2d)
	db.actor:give_game_news(news_text, task_texture, task_rect, 0, 6000)
end

function show_success_message(new_community)
	local title_text = "%c[255,160,160,160]Сообщение"
	local service_text = "\\n%c[default]Группировка успешно изменена - "
	local changed_community_text = game.translate_string(new_community)
	
	local news_text = title_text..service_text..changed_community_text.."."
	local task_texture, task_rect = get_texture_info("ui_iconsTotal_grouping")
	
	pda_tips:play(db.actor, 0, sound_object.s2d)
	db.actor:give_game_news(news_text, task_texture, task_rect, 0, 6000)
end