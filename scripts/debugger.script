--
-- Отладчик
-- Автор: Dancher (Daniil Dubovik)
--

------------------------
	---- ПОЛЯ ----
------------------------

-- Отвечает за включение/выключение дебаг-режима
is_debug_mode = false

-- Расстояние спавна существа от игрока
local creature_distance = 3

-- Делта скорости прокрутки времени (таймфактор)
local timefactor_delta = 1000

-- Количество денег выдаваемых ГГ
local money_to_actor = 10000

-- Звуки нотификации
local pda_tips = xr_sound.get_safe_sound_object([[device\pda\pda_tip]])

---------------------------
	---- ФУНКЦИИ ----
---------------------------

-- Дебаг-функции для обработок нажатий кнопок --
function handle_key(key)
	if not is_debug_mode then
		return
	end

	if key == DIK_keys.DIK_NUMPAD1 then
		if level.present() and (db.actor ~= nil) and db.actor:alive() then
			dec_time()
		end
	end
	
	if key == DIK_keys.DIK_NUMPAD2 then
		if level.present() and (db.actor ~= nil) and db.actor:alive() then
			ret_time()
		end
	end
		
	if key == DIK_keys.DIK_NUMPAD3 then
		if level.present() and (db.actor ~= nil) and db.actor:alive() then
			acc_time()
		end
	end
	
	if key == DIK_keys.DIK_NUMPAD4 then
		spawn_creature2("chimera_strong")
	end
	
	if key == DIK_keys.DIK_NUMPAD5 then
		give_starter_pack()
	end
	
	if key == DIK_keys.DIK_NUMPAD6 then
		do_custom_action2()
	end
	
	if key == DIK_keys.DIK_NUMPAD8 then
		-- Шорткаты для фаст тревела
		-- to_escape()
		-- to_garbage()
		-- to_agroprom()
		-- to_darkvalley()
		-- to_bar()
		-- to_rostok()
		-- to_military()
		-- to_yantar()
		-- to_pripyat()
		-- to_aes1()
		-- to_aes2()
		-- to_point()
		
		-- teleportation
		fast_travel_manager.to_bar()
	end
	
	if key == DIK_keys.DIK_NUMPAD7 then
		add_money_to_actor()
	end
	
	if key == DIK_keys.DIK_NUMPAD9 then
		do_custom_action()
	end
	
	if key == DIK_keys.DIK_F11 then
		show_coordinats()
	end
end

-- Спавним одну вещь в рюкзаке
function spawn_item(who, item)
	if not is_debug_mode then
		return
	end
	
	alife():create(item, who:position(), who:level_vertex_id(), who:game_vertex_id(), who:id())
	log("Был заспавнен предмет: "..item)
end

-- Спавним несколько вещей в рюкзаке
function spawn_items(who, item, count)
	if not is_debug_mode then
		return
	end
	
	for i=1,count do
		spawn_item(who, item)
	end
end

-- Спавним существо
function spawn_creature(creature_name, distance)
	if not is_debug_mode then
		return
	end
	
	local actor = db.actor
	local pos = actor:position()
	local dir = actor:direction()
	pos = pos:add(dir:mul(distance))
	alife():create(creature_name, pos, 1, db.actor:game_vertex_id())
	log("Был заспавнено существо: "..creature_name)
end

-- Спавним существо с дефолтным расстоянием
function spawn_creature2(creature_name)
	spawn_creature(creature_name, creature_distance)
end

-- Спавним деньги
function add_money(who, amount)
	if not is_debug_mode then
		return
	end
	
	who:give_money(amount)
	log("Был заспавнены деньги: "..amount)
end

-- Даём инфопоршень
function give_info(info_name)
	if not is_debug_mode then
		return
	end
	
	db.actor:give_info_portion(info_name)
	log("Был дан инфопоршень: "..info_name)
end

-- Убираем инфопоршень
function disable_info(info_name)
	if not is_debug_mode then
		return
	end
	
	db.actor:disable_info_portion(info_name)
	log("Был убран инфопоршень: "..info_name)
end

-- Убираем инфопоршень
function has_info(info_name)
	if not is_debug_mode then
		return false
	end
	
	local result = db.actor:has_info(info_name)
	log("Имеется ли инфопоршень "..info_name.."? "..tostring(result).."!")
	return result
end

-- Выводим координаты
function show_coordinats()
	if not is_debug_mode then
		return
	end
	
	local actor = db.actor
	local vid = actor:level_vertex_id() 
	local gvid = actor:game_vertex_id()
	local position = actor:position()
	local direction = actor:direction()
	local text
	
	text = "Позиция:\\nX= "..position.x.."\\nY= "..position.y.."\\nZ= "..position.z.."\\nlevel_vertex= "..vid.."\\ngame_vertex_id= "..gvid 
	news_manager.send_tip(actor, text, nil, nil, 30000)
	
	text = "Направление:\\nX= "..direction.x.."\\nY= "..direction.y.."\\nZ= "..direction.z 
	news_manager.send_tip(actor, text, nil, nil, 30000)
end

-- Выводим дебаг-сообщения
function log(message)
	if not is_debug_mode then
		return
	end
	
	flog(message)
end

-- Выводим дебаг-сообщения (force log)
function flog(message)
	local title = "Дебаг-cообщение:"
	local news_text = "%c[255,160,160,160]"..title.."\\n%c[default]"..tostring(message)
	local task_texture, task_rect = get_texture_info("ui_iconsTotal_grouping")
	
	pda_tips:play(db.actor, 0, sound_object.s2d)
	db.actor:give_game_news(news_text, task_texture, task_rect, 0, 10000)
end

-- Функции манипулирования времени
function acc_time()
	if not is_debug_mode then
		return
	end
	
	t = xr_logic.pstor_retrieve(db.actor, "t", 0)
	t = t + timefactor_delta
	level.set_time_factor(t)
	xr_logic.pstor_store(db.actor, "t", t)
	news_manager.send_tip(db.actor, "%c[25,240,25,25]Таймфактор увеличен до "..t.."", nil, nil, 20000)
end

function ret_time()
	if not is_debug_mode then
		return
	end

	level.set_time_factor(10)
	xr_logic.pstor_store(db.actor, "t", 0)
	news_manager.send_tip(db.actor, "%c[0,0,255,25]Таймфактор стандартный", nil, nil, 20000)
end

function dec_time()
	if not is_debug_mode then
		return
	end
	
	t = xr_logic.pstor_retrieve(db.actor, "t", 0)
	t = t - timefactor_delta
	if t <= 0 then
		ret_time()
	else
		level.set_time_factor (t)
		xr_logic.pstor_store(db.actor, "t", t)
		news_manager.send_tip(db.actor, "%c[255,240,155,25]Таймфактор уменьшен до "..t.."", nil, nil, 20000)
	end	
end

-- Выдаём ГГ стартовый "пакет"
function give_starter_pack()
	if not is_debug_mode then
		return
	end
	
	local actor = db.actor
	spawn_item(actor, "dolg_scientific_outfit")
	spawn_item(actor, "wpn_vintorez")
	spawn_item(actor, "wpn_groza")
	spawn_items(actor, "ammo_9x39_ap", 8)
	spawn_items(actor, "ammo_vog-25", 5)
	spawn_items(actor, "medkit_army", 10)
	spawn_items(actor, "antirad", 10)
	spawn_items(actor, "bandage", 20)
	spawn_items(actor, "arc_art_box_basic", 3)
	spawn_items(actor, "af_electra_moonlight", 5)
end

-- Делаем какое-то первое действие для своих нужд
function do_custom_action()
	if not is_debug_mode then
		return
	end
	
	local actor = db.actor
	--give_info("bar_svoboda_rg6_done")
	--disable_info("surge_off_devices")
	--has_info("bar_deactivate_radar_done")
	--spawn_item(actor, "wpn_pkm")
	log("Было совершено пользовательское действие №1")
end

-- Делаем какое-то второе действие для своих нужд
function do_custom_action2()
	if not is_debug_mode then
		return
	end
	
	local actor = db.actor
	--give_info("bar_svoboda_rg6_done")
	--disable_info("surge_off_devices")
	--has_info("bar_deactivate_radar_done")
	--spawn_item(actor, "wpn_pkm")
	debug_exchange()
	log("Было совершено пользовательское действие №2")
end

-- Выдаём ГГ все броники
function give_all_outfits()
	if not is_debug_mode then
		return
	end
	
	local actor = db.actor
	spawn_item(actor, "novice_outfit")
	spawn_item(actor, "bandit_outfit")
	spawn_item(actor, "monolit_outfit")
	spawn_item(actor, "specops_outfit")
	spawn_item(actor, "military_outfit")
	spawn_item(actor, "stalker_outfit")
	spawn_item(actor, "scientific_outfit")
	spawn_item(actor, "exo_outfit")
	spawn_item(actor, "svoboda_light_outfit")
	spawn_item(actor, "svoboda_heavy_outfit")
	spawn_item(actor, "dolg_outfit")
	spawn_item(actor, "dolg_scientific_outfit")
	spawn_item(actor, "ecolog_outfit")
	spawn_item(actor, "protection_outfit")
end

-- Дебаг-функция обмена с заказчиком предметов
function debug_exchange()
	if not is_debug_mode then
		return
	end
	
	local actor = db.actor
	give_info("dar_x18_dream")
	give_info("tutorial_wounded_help")
	add_money(db.actor, money_to_actor * 8)
	spawn_item(actor, exchange_manager.actor_arts[1])
	spawn_item(actor, exchange_manager.actor_arts[2])
	spawn_item(actor, exchange_manager.actor_arts[3])
	spawn_item(actor, exchange_manager.actor_arts[4])
	spawn_item(actor, exchange_manager.actor_arts[5])
end

-- Выдаём ГГ денежку
function add_money_to_actor()
	add_money(db.actor, money_to_actor)
end